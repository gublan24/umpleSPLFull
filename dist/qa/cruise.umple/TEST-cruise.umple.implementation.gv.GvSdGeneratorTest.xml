<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="Abdulazizs-MacBook-Pro.local" name="cruise.umple.implementation.gv.GvSdGeneratorTest" skipped="0" tests="26" time="0.114" timestamp="2021-10-26T14:28:08">
  <properties>
    <property name="ant.library.dir" value="/usr/local/Cellar/ant/1.10.9/libexec/lib" />
    <property name="env.TERM" value="xterm-256color" />
    <property name="java.specification.version" value="15" />
    <property name="ant.project.name" value="UmpleCore" />
    <property name="ant.file.type.UmpleCore" value="file" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="ant.file.type.LocalBuildProperties" value="file" />
    <property name="env.SDKMAN_CANDIDATES_API" value="https://api.sdkman.io/2" />
    <property name="sun.arch.data.model" value="64" />
    <property name="dist.umple.docs.jar.prev" value="umpledocs-1.31.1.5860.78bb27cc6.jar" />
    <property name="rake_cmd" value="rake" />
    <property name="showJunitOutput" value="false" />
    <property name="umple.deps.dir" value="/Users/abdulaziz/tmp/umple/dist/libs" />
    <property name="java.vendor.url" value="https://openjdk.java.net/" />
    <property name="dist.libs.dir" value="/Users/abdulaziz/tmp/umple/dist/libs" />
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home/lib" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner testsfile=/Users/abdulaziz/tmp/umple/junittestcases9945622084601822128.properties skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false showoutput=false outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/Users/abdulaziz/tmp/umple/dist/qa/cruise.umple/IGNORETHIS.xml crashfile=/Users/abdulaziz/tmp/umple/junitvmwatcher11280979461299836288.properties propsfile=/Users/abdulaziz/tmp/umple/junit10838995335343066243.properties" />
    <property name="jdk.debug" value="release" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="test.output.path" value="/Users/abdulaziz/tmp/umple/dist/qa/cruise.umple" />
    <property name="env.JAVA_HOME" value="/usr/local/opt/openjdk" />
    <property name="java.version.date" value="2020-10-20" />
    <property name="java.home" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home" />
    <property name="basedir" value="/Users/abdulaziz/tmp/umple" />
    <property name="file.separator" value="/" />
    <property name="java.vm.compressedOopsMode" value="Zero based" />
    <property name="line.separator" value="&#xa;" />
    <property name="ivy.jar.file" value="/Users/abdulaziz/.ant/lib/ivy-2.4.0.jar" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.file.Template" value="/Users/abdulaziz/tmp/umple/build/_template.xml" />
    <property name="dist.umple.stats.jar" value="umplestats-1.31.1.5860.78bb27cc6.jar" />
    <property name="ivyRetrieveLogLevel" value="quiet" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="java.runtime.version" value="15.0.1+9" />
    <property name="env.TERM_PROGRAM_VERSION" value="440" />
    <property name="user.name" value="abdulaziz" />
    <property name="env.PATH" value="/Users/abdulaziz/.sdkman/candidates/gradle/current/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands" />
    <property name="env.LOGNAME" value="abdulaziz" />
    <property name="env.XPC_FLAGS" value="0x0" />
    <property name="env.__CF_USER_TEXT_ENCODING" value="0x1F5:0x0:0x0" />
    <property name="file.encoding" value="UTF-8" />
    <property name="env.__CFBundleIdentifier" value="com.apple.Terminal" />
    <property name="env.TERM_SESSION_ID" value="20D2790F-0FEC-4CCB-A10B-030C8F4ED298" />
    <property name="umple.stable.jar" value="/Users/abdulaziz/tmp/umple/dist/libs/umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="haltonfailure" value="false" />
    <property name="connectionTimeout" value="30" />
    <property name="env.SHLVL" value="1" />
    <property name="dist.dir" value="/Users/abdulaziz/tmp/umple/dist" />
    <property name="dist.path" value="/Users/abdulaziz/tmp/umple/dist/cruise.umple" />
    <property name="java.io.tmpdir" value="/var/folders/fm/7tjk7l8154x840c6vvrs49p40000gn/T/" />
    <property name="umple.ivy.dep.file" value="/Users/abdulaziz/tmp/umple/build/ivy.xml" />
    <property name="dist.umple.run.jar.prev" value="umplerun-1.31.1.5860.78bb27cc6.jar" />
    <property name="dist.umple.jar" value="umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.version" value="15.0.1" />
    <property name="env.SSH_AUTH_SOCK" value="/private/tmp/com.apple.launchd.qK4l0KXsgu/Listeners" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.home" value="/usr/local/Cellar/ant/1.10.9/libexec" />
    <property name="ant.file.type.UmpleDeps" value="file" />
    <property name="env.SDKMAN_DIR" value="/Users/abdulaziz/.sdkman" />
    <property name="ant.version" value="Apache Ant(TM) version 1.10.9 compiled on September 27 2020" />
    <property name="env.TMPDIR" value="/var/folders/fm/7tjk7l8154x840c6vvrs49p40000gn/T/" />
    <property name="env.SDKMAN_PLATFORM" value="darwinx64" />
    <property name="java.library.path" value="/Users/abdulaziz/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:." />
    <property name="java.vendor" value="N/A" />
    <property name="shouldPackageUmpleOnline" value="false" />
    <property name="dist.umple.validator.jar" value="umplevalidator-1.31.1.5860.78bb27cc6.jar" />
    <property name="sun.io.unicode.encoding" value="UnicodeBig" />
    <property name="jopt-simple.install.version" value="4.4" />
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="env.SDKMAN_CANDIDATES_DIR" value="/Users/abdulaziz/.sdkman/candidates" />
    <property name="env.TERM_PROGRAM" value="Apple_Terminal" />
    <property name="vendors.path" value="/Users/abdulaziz/tmp/umple/dist/libs/vendors" />
    <property name="env.PWD" value="/Users/abdulaziz/tmp/umple/build" />
    <property name="ant.file.type" value="file" />
    <property name="last.version" value="1.31.1.5860.78bb27cc6" />
    <property name="env.LANG" value="en_CA.UTF-8" />
    <property name="ant.file.type.VersionLast" value="file" />
    <property name="java.class.path" value="/Users/abdulaziz/tmp/umple/cruise.umple/bin:/Users/abdulaziz/tmp/umple/dist/libs/core/ant-launcher.jar:/Users/abdulaziz/tmp/umple/dist/libs/core/ant.jar:/Users/abdulaziz/tmp/umple/dist/libs/core/jopt-simple.jar:/Users/abdulaziz/tmp/umple/dist/libs/test/hamcrest-core.jar:/Users/abdulaziz/tmp/umple/dist/libs/test/junit.jar:/Users/abdulaziz/.ant/lib/junit.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-launcher.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-junit.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-junit4.jar" />
    <property name="env.HOME" value="/Users/abdulaziz" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="env.GRADLE_HOME" value="/Users/abdulaziz/.sdkman/candidates/gradle/current" />
    <property name="xtext.project.path" value="cruise.umple.xtext" />
    <property name="ant.file.type.Template" value="file" />
    <property name="user.timezone" value="America/Toronto" />
    <property name="project.path" value="cruise.umple" />
    <property name="ant.file.UmpleDeps" value="/Users/abdulaziz/tmp/umple/build/build.deps.xml" />
    <property name="java.vm.specification.version" value="15" />
    <property name="os.name" value="Mac OS X" />
    <property name="env.DISPLAY" value="/private/tmp/com.apple.launchd.8VZUm1G4zQ/org.xquartz:0" />
    <property name="dist.umple.sync.jar" value="umplesync-1.31.1.5860.78bb27cc6.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="user.country" value="CA" />
    <property name="dist.umple.run.jar" value="umplerun-1.31.1.5860.78bb27cc6.jar" />
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="sun.cpu.endian" value="little" />
    <property name="user.home" value="/Users/abdulaziz" />
    <property name="user.language" value="en" />
    <property name="ivy.install.version" value="2.4.0" />
    <property name="ant.java.version" value="15" />
    <property name="ant.file.type.Umple" value="file" />
    <property name="showJunitSummary" value="false" />
    <property name="bin.path" value="cruise.umple/bin" />
    <property name="umple.version" value="1.31.1.5860.78bb27cc6" />
    <property name="dist.umple.sync.jar.prev" value="umplesync-1.31.1.5860.78bb27cc6.jar" />
    <property name="ivyResolveLogLevel" value="download-only" />
    <property name="env.XPC_SERVICE_NAME" value="0" />
    <property name="user.home.ant" value="/Users/abdulaziz/.ant/lib" />
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="is.osx" value="true" />
    <property name="dist.umple.stats.jar.prev" value="umplestats-1.31.1.5860.78bb27cc6.jar" />
    <property name="ant.file" value="/Users/abdulaziz/tmp/umple/build/build.umple.xml" />
    <property name="path.separator" value=":" />
    <property name="dist.umple.umplificator.jar.prev" value="umpleumplificator-1.31.1.5860.78bb27cc6.jar" />
    <property name="os.version" value="11.6" />
    <property name="ant.file.VersionLast" value="/Users/abdulaziz/tmp/umple/build/_versionLast.xml" />
    <property name="ant.file.Umple" value="/Users/abdulaziz/tmp/umple/build/build.xml" />
    <property name="java.runtime.name" value="OpenJDK Runtime Environment" />
    <property name="dist.umple.docs.jar" value="umpledocs-1.31.1.5860.78bb27cc6.jar" />
    <property name="ant.project.invoked-targets" value="template.test" />
    <property name="dist.umple.umplificator.jar" value="umpleumplificator-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM" />
    <property name="ant.file.LocalBuildProperties" value="/Users/abdulaziz/tmp/umple/build/_local.xml" />
    <property name="env.SHELL" value="/bin/zsh" />
    <property name="ant.core.lib" value="/usr/local/Cellar/ant/1.10.9/libexec/lib/ant.jar" />
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/" />
    <property name="junit" value="*Test" />
    <property name="user.dir" value="/Users/abdulaziz/tmp/umple/build" />
    <property name="os.arch" value="x86_64" />
    <property name="env.SDKMAN_VERSION" value="5.11.5+713" />
    <property name="shouldDeploy" value="false" />
    <property name="dist.umple.validator.jar.prev" value="umplevalidator-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.vm.info" value="mixed mode, sharing" />
    <property name="java.vm.version" value="15.0.1+9" />
    <property name="ant.file.UmpleCore" value="/Users/abdulaziz/tmp/umple/build/build.umple.xml" />
    <property name="online" value="true" />
    <property name="myenv" value="local" />
    <property name="umple.deps.manual.dir" value="/Users/abdulaziz/tmp/umple/dist/libs/manual" />
    <property name="env.USER" value="abdulaziz" />
    <property name="java.class.version" value="59.0" />
    <property name="first.build" value="false" />
    <property name="dist.umple.jar.prev" value="umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="env.JAVA_MAIN_CLASS_3280" value="org.apache.tools.ant.launch.Launcher" />
    <property name="ant.project.default-target" value="build" />
  </properties>
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_activity_less5_transition" time="0.009" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_activity_5_transition" time="0.008" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_guard_transition" time="0.008" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_hide_action_transition" time="0.005" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_hide_guard_transition" time="0.002" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_activity_more5_state" time="0.004" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_exit_more5_state" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_normal_state" time="0.004" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_activity_less5_state" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_activity_more5_transition" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_exit_less5_state" time="0.002" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_nested_transition" time="0.004" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_nested_state" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_transition" time="0.002" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_exit_5_state" time="0.002" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_hide_action_state" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_activity_5_state" time="0.002" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_guarded_auto_transition" time="0.006" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_parameter_transition" time="0.011" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_entry_more5_state" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_entry_5_state" time="0.008" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_entry_less5_state" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_timed_transition" time="0.003" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_auto_transition" time="0.004" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="tooltip_transition_self" time="0.002" />
  <testcase classname="cruise.umple.implementation.gv.GvSdGeneratorTest" name="avoidJunitError" time="0.001" />
  <system-out><![CDATA[// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "ActLess5Transition" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s2 [  label = "e1 / doTransition();", tooltip = "From s1 to s2 on e1&#13;Transition Action:
     doTransition();" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "Act5Transition" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s2 [  label = "e1 / {...}", tooltip = "From s1 to s2 on e1&#13;Transition Action:
     doTransition1();
     doTransition2();
     doTransition3();
     doTransition4();
     doTransition5();" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "GuardTransition" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s2 [  label = "e1 [guard()]", tooltip = "From s1 to s2 on e1&#13;Guard:  [guard()]" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "HideActionTransition" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s2 [  label = "e1", tooltip = "From s1 to s2 on e1" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "HideGuardTransition" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s2 [  label = "e1", tooltip = "From s1 to s2 on e1" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "ActivityMore5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Activity:
   doThisContinuouslyWhileOn1(); 
   doThisContinuouslyWhileOn2();
   doThisContinuouslyWhileOn3();
   doThisContinuouslyWhileOn4();
   doThisContinuouslyWhileOn5();
   ..."];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "ExitMore5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Exit:
   doEntry1(); 
   doEntry2();
   doEntry3();
   doEntry4();
   doEntry5();
   ..."];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "NormalState" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "ActivityLess5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Activity:
   doThisContinuouslyWhileOn();"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "ActMore5Transition" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s2 [  label = "e1 / {...}", tooltip = "From s1 to s2 on e1&#13;Transition Action:
     doTransition1();
     doTransition2();
     doTransition3();
     doTransition4();
     doTransition5();
     ..." ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "ExitLess5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Exit:
   doEntry();"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "NestedTransition" {
  compound = true;

  // Class: A

    // Top Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

     subgraph clusterA_sm_s2 {
      label = "s2";
      style = rounded;

      // Bottom Level StateMachine: s2
      
      // Start states are shown as a black circle
      node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
      start_A_smS2 [ tooltip = "Class A, SM sm, State s2.start" ];
      
            
      // Format for normal states
      node [ratio="auto" shape = rectangle, width=1,style=rounded];
      
        // State: s2a

        A_smS2_s2a [label = s2a, tooltip = "Class A, SM sm, State s2.s2a"];
        // End State: s2a

        // State: s2b

        A_smS2_s2b [label = s2b, tooltip = "Class A, SM sm, State s2.s2b"];
        // End State: s2b
      // End Bottom Level StateMachine: s2
     }
      // End State: s2
    // End Top Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_smS2_s2a -> A_sm_s1 [  ltail=clusterA_sm_s2,  label = "e1", tooltip = "From s2 to s1 on e1" ] ;
  
  A_sm_s1 -> A_smS2_s2a [  lhead=clusterA_sm_s2,  label = "e1", tooltip = "From s1 to s2 on e1" ] ;
  
  start_A_smS2 -> A_smS2_s2a [  tooltip = "start to s2.s2a" ] ;
    A_smS2_s2b -> A_smS2_s2a [  label = "e3", tooltip = "From s2.s2b to s2.s2a on e3" ] ;
  
  A_sm_s1 -> A_smS2_s2b [  label = "e2", tooltip = "From s1 to s2.s2b on e2" ] ;
  
  A_smS2_s2a -> A_smS2_s2b [  label = "e3", tooltip = "From s2.s2a to s2.s2b on e3" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "NestedState" {
  compound = true;

  // Class: A

    // Top Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

     subgraph clusterA_sm_s2 {
      label = "s2";
      style = rounded;

      // Bottom Level StateMachine: s2
      
      // Start states are shown as a black circle
      node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
      start_A_smS2 [ tooltip = "Class A, SM sm, State s2.start" ];
      
            
      // Format for normal states
      node [ratio="auto" shape = rectangle, width=1,style=rounded];
      
        // State: s2a

        A_smS2_s2a [label = s2a, tooltip = "Class A, SM sm, State s2.s2a"];
        // End State: s2a
      // End Bottom Level StateMachine: s2
     }
      // End State: s2
    // End Top Level StateMachine: sm

  // All transitions
    start_A_sm -> A_smS2_s2a [  lhead=clusterA_sm_s2,  tooltip = "start to s2" ] ;
    start_A_smS2 -> A_smS2_s2a [  tooltip = "start to s2.s2a" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "Transition" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1

      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s2 [  label = "e1", tooltip = "From s1 to s2 on e1" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "Exit5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Exit:
   doEntry1(); 
   doEntry2();
   doEntry3();
   doEntry4();
   doEntry5();"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "HideActionState" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "Activity5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Activity:
   doThisContinuouslyWhileOn1(); 
   doThisContinuouslyWhileOn2();
   doThisContinuouslyWhileOn3();
   doThisContinuouslyWhileOn4();
   doThisContinuouslyWhileOn5();"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "GuardedAutoTransition" {
  compound = true;

  // Class: X

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_X_sm [ tooltip = "Class X, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      X_sm_s1 [label = s1, tooltip = "Class X, SM sm, State s1&#13;Entry:
   System.out.println(&quot;Starting first sleep&quot;);&#13;Activity:
   Thread.sleep(2000);
   System.out.println(&quot;Ending first sleep&quot;);"];
      // End State: s1

      // State: s2

      X_sm_s2 [label = s2, tooltip = "Class X, SM sm, State s2&#13;Entry:
   System.out.println(&quot;Starting second sleep&quot;);&#13;Activity:
   Thread.sleep(2000);
   System.out.println(&quot;Ending second sleep&quot;);"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_X_sm -> X_sm_s1 [  tooltip = "start to s1" ] ;
    X_sm_s1 -> X_sm_s2 [  label = "[guard]", tooltip = "From s1 to s2 automatically&#13;Guard: [guard]" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "ParameterTransition" {
  compound = true;

  // Class: X

    // Top and Bottom Level StateMachine: stateMachine1
    
     subgraph clusterX_stateMachine1 {
      label = "sm X stateMachine1";
      penwidth=0.5;
        
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_X_stateMachine1 [ tooltip = "Class X, SM stateMachine1, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1a

      X_stateMachine1_s1a [label = s1a, tooltip = "Class X, SM stateMachine1, State s1a&#13;Activity:
   // This do activity sends events to stateMachine1
   e(5);
   Thread.sleep(1000);
   e(6);
   Thread.sleep(1000);
   ..."];
      // End State: s1a

      // State: s1b

      X_stateMachine1_s1b [label = s1b, tooltip = "Class X, SM stateMachine1, State s1b"];
      // End State: s1b
    // End Top and Bottom Level StateMachine: stateMachine1
  }

    // Top and Bottom Level StateMachine: stateMachine2
    
     subgraph clusterX_stateMachine2 {
      label = "sm X stateMachine2";
      penwidth=0.5;
        
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_X_stateMachine2 [ tooltip = "Class X, SM stateMachine2, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2a

      X_stateMachine2_s2a [label = s2a, tooltip = "Class X, SM stateMachine2, State s2a&#13;Entry:
   System.out.println(&quot;s2a&quot;);"];
      // End State: s2a

      // State: s2b

      X_stateMachine2_s2b [label = s2b, tooltip = "Class X, SM stateMachine2, State s2b&#13;Entry:
   System.out.println(&quot;s2b&quot;);"];
      // End State: s2b
    // End Top and Bottom Level StateMachine: stateMachine2
  }

  // All transitions
    start_X_stateMachine1 -> X_stateMachine1_s1a [  tooltip = "start to s1a" ] ;
    X_stateMachine1_s1a -> X_stateMachine1_s1b [  tooltip = "From s1a to s1b automatically" ] ;
  
  start_X_stateMachine2 -> X_stateMachine2_s2a [  tooltip = "start to s2a" ] ;
    X_stateMachine2_s2b -> X_stateMachine2_s2a [  label = "e(int a) / {...}", tooltip = "From s2b to s2a on e(int a)&#13;Transition Action:
     System.out.println(&quot;e&quot;+a);" ] ;
  
  X_stateMachine2_s2a -> X_stateMachine2_s2b [  label = "e(int a) [a > 6] / {...}", tooltip = "From s2a to s2b on e(int a)&#13;Guard:  [a > 6]&#13;Transition Action:
     System.out.println(&quot;e&quot;+a);" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "EntryMore5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Entry:
   doEntry1(); 
   doEntry2();
   doEntry3();
   doEntry4();
   doEntry5();
   ..."];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "Entry5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Entry:
   doEntry1(); 
   doEntry2();
   doEntry3();
   doEntry4();
   doEntry5();"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "EntryLess5State" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s2

      A_sm_s2 [label = s2, tooltip = "Class A, SM sm, State s2&#13;Entry:
   doEntry();"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s2 [  tooltip = "start to s2" ] ;
  
}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "TimedTransition" {
  compound = true;

  // Class: X

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_X_sm [ tooltip = "Class X, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: a

      X_sm_a [label = a, tooltip = "Class X, SM sm, State a&#13;Entry:
   System.out.println(&quot;entering a&quot;);"];
      // End State: a

      // State: b

      X_sm_b [label = b, tooltip = "Class X, SM sm, State b&#13;Entry:
   System.out.println(&quot;entering b&quot;);"];
      // End State: b
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_X_sm -> X_sm_a [  tooltip = "start to a" ] ;
    X_sm_a -> X_sm_b [  label = "after(1)", tooltip = "From a to b after(1)" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "AutoTransition" {
  compound = true;

  // Class: X

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_X_sm [ tooltip = "Class X, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      X_sm_s1 [label = s1, tooltip = "Class X, SM sm, State s1&#13;Entry:
   System.out.println(&quot;Starting first sleep&quot;);&#13;Activity:
   Thread.sleep(2000);
   System.out.println(&quot;Ending first sleep&quot;);"];
      // End State: s1

      // State: s2

      X_sm_s2 [label = s2, tooltip = "Class X, SM sm, State s2&#13;Entry:
   System.out.println(&quot;Starting second sleep&quot;);&#13;Activity:
   Thread.sleep(2000);
   System.out.println(&quot;Ending second sleep&quot;);"];
      // End State: s2
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_X_sm -> X_sm_s1 [  tooltip = "start to s1" ] ;
    X_sm_s1 -> X_sm_s2 [  tooltip = "From s1 to s2 automatically" ] ;
  

}

// Code generated by Umple 1.31.1.5860.78bb27cc6

digraph "TransitionSelf" {
  compound = true;

  // Class: A

    // Top and Bottom Level StateMachine: sm
    
    // Start states are shown as a black circle
    node [ratio="auto" shape = point, fillcolor="black", width=0.2 ];
    start_A_sm [ tooltip = "Class A, SM sm, State start" ];
    
        
    // Format for normal states
    node [ratio="auto" shape = rectangle, width=1,style=rounded];
    
      // State: s1

      A_sm_s1 [label = s1, tooltip = "Class A, SM sm, State s1"];
      // End State: s1
    // End Top and Bottom Level StateMachine: sm

  // All transitions
    start_A_sm -> A_sm_s1 [  tooltip = "start to s1" ] ;
    A_sm_s1 -> A_sm_s1 [  label = "e1", tooltip = "From s1 to s1 on e1" ] ;
  

}

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
