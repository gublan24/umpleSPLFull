<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="Abdulazizs-MacBook-Pro.local" name="cruise.umple.implementation.ConstraintExpressionsTest" skipped="1" tests="12" time="0.092" timestamp="2021-10-26T14:28:03">
  <properties>
    <property name="ant.library.dir" value="/usr/local/Cellar/ant/1.10.9/libexec/lib" />
    <property name="env.TERM" value="xterm-256color" />
    <property name="java.specification.version" value="15" />
    <property name="ant.project.name" value="UmpleCore" />
    <property name="ant.file.type.UmpleCore" value="file" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="ant.file.type.LocalBuildProperties" value="file" />
    <property name="env.SDKMAN_CANDIDATES_API" value="https://api.sdkman.io/2" />
    <property name="sun.arch.data.model" value="64" />
    <property name="dist.umple.docs.jar.prev" value="umpledocs-1.31.1.5860.78bb27cc6.jar" />
    <property name="rake_cmd" value="rake" />
    <property name="showJunitOutput" value="false" />
    <property name="umple.deps.dir" value="/Users/abdulaziz/tmp/umple/dist/libs" />
    <property name="java.vendor.url" value="https://openjdk.java.net/" />
    <property name="dist.libs.dir" value="/Users/abdulaziz/tmp/umple/dist/libs" />
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home/lib" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner testsfile=/Users/abdulaziz/tmp/umple/junittestcases9945622084601822128.properties skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false showoutput=false outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/Users/abdulaziz/tmp/umple/dist/qa/cruise.umple/IGNORETHIS.xml crashfile=/Users/abdulaziz/tmp/umple/junitvmwatcher11280979461299836288.properties propsfile=/Users/abdulaziz/tmp/umple/junit10838995335343066243.properties" />
    <property name="jdk.debug" value="release" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="test.output.path" value="/Users/abdulaziz/tmp/umple/dist/qa/cruise.umple" />
    <property name="env.JAVA_HOME" value="/usr/local/opt/openjdk" />
    <property name="java.version.date" value="2020-10-20" />
    <property name="java.home" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home" />
    <property name="basedir" value="/Users/abdulaziz/tmp/umple" />
    <property name="file.separator" value="/" />
    <property name="java.vm.compressedOopsMode" value="Zero based" />
    <property name="line.separator" value="&#xa;" />
    <property name="ivy.jar.file" value="/Users/abdulaziz/.ant/lib/ivy-2.4.0.jar" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.file.Template" value="/Users/abdulaziz/tmp/umple/build/_template.xml" />
    <property name="dist.umple.stats.jar" value="umplestats-1.31.1.5860.78bb27cc6.jar" />
    <property name="ivyRetrieveLogLevel" value="quiet" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="java.runtime.version" value="15.0.1+9" />
    <property name="env.TERM_PROGRAM_VERSION" value="440" />
    <property name="user.name" value="abdulaziz" />
    <property name="env.PATH" value="/Users/abdulaziz/.sdkman/candidates/gradle/current/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands" />
    <property name="env.LOGNAME" value="abdulaziz" />
    <property name="env.XPC_FLAGS" value="0x0" />
    <property name="env.__CF_USER_TEXT_ENCODING" value="0x1F5:0x0:0x0" />
    <property name="file.encoding" value="UTF-8" />
    <property name="env.__CFBundleIdentifier" value="com.apple.Terminal" />
    <property name="env.TERM_SESSION_ID" value="20D2790F-0FEC-4CCB-A10B-030C8F4ED298" />
    <property name="umple.stable.jar" value="/Users/abdulaziz/tmp/umple/dist/libs/umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="haltonfailure" value="false" />
    <property name="connectionTimeout" value="30" />
    <property name="env.SHLVL" value="1" />
    <property name="dist.dir" value="/Users/abdulaziz/tmp/umple/dist" />
    <property name="dist.path" value="/Users/abdulaziz/tmp/umple/dist/cruise.umple" />
    <property name="java.io.tmpdir" value="/var/folders/fm/7tjk7l8154x840c6vvrs49p40000gn/T/" />
    <property name="umple.ivy.dep.file" value="/Users/abdulaziz/tmp/umple/build/ivy.xml" />
    <property name="dist.umple.run.jar.prev" value="umplerun-1.31.1.5860.78bb27cc6.jar" />
    <property name="dist.umple.jar" value="umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.version" value="15.0.1" />
    <property name="env.SSH_AUTH_SOCK" value="/private/tmp/com.apple.launchd.qK4l0KXsgu/Listeners" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.home" value="/usr/local/Cellar/ant/1.10.9/libexec" />
    <property name="ant.file.type.UmpleDeps" value="file" />
    <property name="env.SDKMAN_DIR" value="/Users/abdulaziz/.sdkman" />
    <property name="ant.version" value="Apache Ant(TM) version 1.10.9 compiled on September 27 2020" />
    <property name="env.TMPDIR" value="/var/folders/fm/7tjk7l8154x840c6vvrs49p40000gn/T/" />
    <property name="env.SDKMAN_PLATFORM" value="darwinx64" />
    <property name="java.library.path" value="/Users/abdulaziz/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:." />
    <property name="java.vendor" value="N/A" />
    <property name="shouldPackageUmpleOnline" value="false" />
    <property name="dist.umple.validator.jar" value="umplevalidator-1.31.1.5860.78bb27cc6.jar" />
    <property name="sun.io.unicode.encoding" value="UnicodeBig" />
    <property name="jopt-simple.install.version" value="4.4" />
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="env.SDKMAN_CANDIDATES_DIR" value="/Users/abdulaziz/.sdkman/candidates" />
    <property name="env.TERM_PROGRAM" value="Apple_Terminal" />
    <property name="vendors.path" value="/Users/abdulaziz/tmp/umple/dist/libs/vendors" />
    <property name="env.PWD" value="/Users/abdulaziz/tmp/umple/build" />
    <property name="ant.file.type" value="file" />
    <property name="last.version" value="1.31.1.5860.78bb27cc6" />
    <property name="env.LANG" value="en_CA.UTF-8" />
    <property name="ant.file.type.VersionLast" value="file" />
    <property name="java.class.path" value="/Users/abdulaziz/tmp/umple/cruise.umple/bin:/Users/abdulaziz/tmp/umple/dist/libs/core/ant-launcher.jar:/Users/abdulaziz/tmp/umple/dist/libs/core/ant.jar:/Users/abdulaziz/tmp/umple/dist/libs/core/jopt-simple.jar:/Users/abdulaziz/tmp/umple/dist/libs/test/hamcrest-core.jar:/Users/abdulaziz/tmp/umple/dist/libs/test/junit.jar:/Users/abdulaziz/.ant/lib/junit.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-launcher.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-junit.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-junit4.jar" />
    <property name="env.HOME" value="/Users/abdulaziz" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="env.GRADLE_HOME" value="/Users/abdulaziz/.sdkman/candidates/gradle/current" />
    <property name="xtext.project.path" value="cruise.umple.xtext" />
    <property name="ant.file.type.Template" value="file" />
    <property name="user.timezone" value="America/Toronto" />
    <property name="project.path" value="cruise.umple" />
    <property name="ant.file.UmpleDeps" value="/Users/abdulaziz/tmp/umple/build/build.deps.xml" />
    <property name="java.vm.specification.version" value="15" />
    <property name="os.name" value="Mac OS X" />
    <property name="env.DISPLAY" value="/private/tmp/com.apple.launchd.8VZUm1G4zQ/org.xquartz:0" />
    <property name="dist.umple.sync.jar" value="umplesync-1.31.1.5860.78bb27cc6.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="user.country" value="CA" />
    <property name="dist.umple.run.jar" value="umplerun-1.31.1.5860.78bb27cc6.jar" />
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="sun.cpu.endian" value="little" />
    <property name="user.home" value="/Users/abdulaziz" />
    <property name="user.language" value="en" />
    <property name="ivy.install.version" value="2.4.0" />
    <property name="ant.java.version" value="15" />
    <property name="ant.file.type.Umple" value="file" />
    <property name="showJunitSummary" value="false" />
    <property name="bin.path" value="cruise.umple/bin" />
    <property name="umple.version" value="1.31.1.5860.78bb27cc6" />
    <property name="dist.umple.sync.jar.prev" value="umplesync-1.31.1.5860.78bb27cc6.jar" />
    <property name="ivyResolveLogLevel" value="download-only" />
    <property name="env.XPC_SERVICE_NAME" value="0" />
    <property name="user.home.ant" value="/Users/abdulaziz/.ant/lib" />
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="is.osx" value="true" />
    <property name="dist.umple.stats.jar.prev" value="umplestats-1.31.1.5860.78bb27cc6.jar" />
    <property name="ant.file" value="/Users/abdulaziz/tmp/umple/build/build.umple.xml" />
    <property name="path.separator" value=":" />
    <property name="dist.umple.umplificator.jar.prev" value="umpleumplificator-1.31.1.5860.78bb27cc6.jar" />
    <property name="os.version" value="11.6" />
    <property name="ant.file.VersionLast" value="/Users/abdulaziz/tmp/umple/build/_versionLast.xml" />
    <property name="ant.file.Umple" value="/Users/abdulaziz/tmp/umple/build/build.xml" />
    <property name="java.runtime.name" value="OpenJDK Runtime Environment" />
    <property name="dist.umple.docs.jar" value="umpledocs-1.31.1.5860.78bb27cc6.jar" />
    <property name="ant.project.invoked-targets" value="template.test" />
    <property name="dist.umple.umplificator.jar" value="umpleumplificator-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM" />
    <property name="ant.file.LocalBuildProperties" value="/Users/abdulaziz/tmp/umple/build/_local.xml" />
    <property name="env.SHELL" value="/bin/zsh" />
    <property name="ant.core.lib" value="/usr/local/Cellar/ant/1.10.9/libexec/lib/ant.jar" />
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/" />
    <property name="junit" value="*Test" />
    <property name="user.dir" value="/Users/abdulaziz/tmp/umple/build" />
    <property name="os.arch" value="x86_64" />
    <property name="env.SDKMAN_VERSION" value="5.11.5+713" />
    <property name="shouldDeploy" value="false" />
    <property name="dist.umple.validator.jar.prev" value="umplevalidator-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.vm.info" value="mixed mode, sharing" />
    <property name="java.vm.version" value="15.0.1+9" />
    <property name="ant.file.UmpleCore" value="/Users/abdulaziz/tmp/umple/build/build.umple.xml" />
    <property name="online" value="true" />
    <property name="myenv" value="local" />
    <property name="umple.deps.manual.dir" value="/Users/abdulaziz/tmp/umple/dist/libs/manual" />
    <property name="env.USER" value="abdulaziz" />
    <property name="java.class.version" value="59.0" />
    <property name="first.build" value="false" />
    <property name="dist.umple.jar.prev" value="umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="env.JAVA_MAIN_CLASS_3280" value="org.apache.tools.ant.launch.Launcher" />
    <property name="ant.project.default-target" value="build" />
  </properties>
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="DateConstraint1" time="0.016" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicPostcondition1" time="0.02" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicPrecondition1" time="0.01" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="MultipleConstraints" time="0.006" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicConstraint1" time="0.003" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicConstraint3" time="0.004" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicConstraint4" time="0.0">
    <skipped />
  </testcase>
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicConstraint5" time="0.014" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicConstraint6" time="0.004" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicConstraint7" time="0.007" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="BasicConstraint8" time="0.004" />
  <testcase classname="cruise.umple.implementation.ConstraintExpressionsTest" name="avoidJunitError" time="0.001" />
  <system-out><![CDATA[/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/


import java.sql.Date;

// line 2 "DateConstraint1.ump"
public class X
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //X Attributes
  private Date d;
  private Date e;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public X(Date aD, Date aE)
  {
    d = aD;
    e = aE;
    if (aD.getTime()<=aE.getTime())
    {
      throw new RuntimeException("Please provide a valid d and e [d>e]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setD(Date aD)
  {
    boolean wasSet = false;
    if (aD.getTime()>getE().getTime())
    {
    d = aD;
    wasSet = true;
    }
    return wasSet;
  }

  public boolean setE(Date aE)
  {
    boolean wasSet = false;
    if (getD().getTime()>aE.getTime())
    {
    e = aE;
    wasSet = true;
    }
    return wasSet;
  }

  public Date getD()
  {
    return d;
  }

  public Date getE()
  {
    return e;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+ "]" + System.getProperties().getProperty("line.separator") +
            "  " + "d" + "=" + (getD() != null ? !getD().equals(this)  ? getD().toString().replaceAll("  ","    ") : "this" : "null") + System.getProperties().getProperty("line.separator") +
            "  " + "e" + "=" + (getE() != null ? !getE().equals(this)  ? getE().toString().replaceAll("  ","    ") : "this" : "null");
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "BasicPostCondition1.ump"
public class Client
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Client Attributes
  private int minAge;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Client(int aMinAge)
  {
    minAge = aMinAge;
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setMinAge(int aMinAge)
  {
    boolean wasSet = false;
    minAge = aMinAge;
    wasSet = true;
    return wasSet;
  }

  public int getMinAge()
  {
    return minAge;
  }

  public void delete()
  {}

  // line 7 "BasicPostCondition1.ump"
  // line 7 "BasicPostCondition1.ump"
  public int someMethod(Integer arg){
    int result = someMethod_Original(arg);
    if (arg<=5)
    {
        throw new RuntimeException("Please provide a valid arg");
    }
    return result;
  }

  public int someMethod_Original(Integer arg){
    // rest of stuff that we don't interpret
   return 0;
  }


  public String toString()
  {
    return super.toString() + "["+
            "minAge" + ":" + getMinAge()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "BasicPrecondition1.ump"
public class Client
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Client Attributes
  private int minAge;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Client(int aMinAge)
  {
    minAge = aMinAge;
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setMinAge(int aMinAge)
  {
    boolean wasSet = false;
    minAge = aMinAge;
    wasSet = true;
    return wasSet;
  }

  public int getMinAge()
  {
    return minAge;
  }

  public void delete()
  {}

  // line 8 "BasicPrecondition1.ump"
  public int someMethod(Integer arg){

    if (arg<=5)
    {
        throw new RuntimeException("Please provide a valid arg");
    }
    if (getMinAge()>=8)
    {
        throw new RuntimeException("Please provide a valid minAge");
    }
    // rest of stuff that we don't interpret
    return 0;
  }


  public String toString()
  {
    return super.toString() + "["+
            "minAge" + ":" + getMinAge()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "MultipleConstraints.ump"
public class MultipleConstraints
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //MultipleConstraints Attributes
  private int i;
  private int j;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public MultipleConstraints(int aI, int aJ)
  {
    i = aI;
    j = aJ;
    if (aI<0)
    {
      throw new RuntimeException("Please provide a valid i [i>=0]");
    }
    if (aJ<0)
    {
      throw new RuntimeException("Please provide a valid j [j>=0]");
    }
    if (aI<aJ)
    {
      throw new RuntimeException("Please provide a valid i and j [i>=j]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setI(int aI)
  {
    boolean wasSet = false;
    if (aI>=getJ())
    {
    if (aI>=0)
    {
    i = aI;
    wasSet = true;
    }
    }
    return wasSet;
  }

  public boolean setJ(int aJ)
  {
    boolean wasSet = false;
    if (aJ>=0)
    {
    if (getI()>=aJ)
    {
    j = aJ;
    wasSet = true;
    }
    }
    return wasSet;
  }

  public int getI()
  {
    return i;
  }

  public int getJ()
  {
    return j;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "i" + ":" + getI()+ "," +
            "j" + ":" + getJ()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "BasicConstraint1.ump"
public class student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //student Attributes
  private int age;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public student(int aAge)
  {
    age = aAge;
    if (aAge<=18)
    {
      throw new RuntimeException("Please provide a valid age [age>18]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setAge(int aAge)
  {
    boolean wasSet = false;
    if (aAge>18)
    {
    age = aAge;
    wasSet = true;
    }
    return wasSet;
  }

  public int getAge()
  {
    return age;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "age" + ":" + getAge()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



/**
 * attributes on both sides of the constraint's boolean expression
 */
// line 2 "BasicConstraint3.ump"
public class Client
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Client Attributes
  private int minAge;
  private int age;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Client(int aMinAge, int aAge)
  {
    minAge = aMinAge;
    age = aAge;
    if (aAge<=aMinAge)
    {
      throw new RuntimeException("Please provide a valid age and minAge [age>minAge]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setMinAge(int aMinAge)
  {
    boolean wasSet = false;
    if (getAge()>aMinAge)
    {
    minAge = aMinAge;
    wasSet = true;
    }
    return wasSet;
  }

  public boolean setAge(int aAge)
  {
    boolean wasSet = false;
    if (aAge>getMinAge())
    {
    age = aAge;
    wasSet = true;
    }
    return wasSet;
  }

  public int getMinAge()
  {
    return minAge;
  }

  public int getAge()
  {
    return age;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "minAge" + ":" + getMinAge()+ "," +
            "age" + ":" + getAge()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "BasicConstraint5.ump"
public class student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //student Attributes
  private int age;
  private int weight;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public student(int aAge, int aWeight)
  {
    age = aAge;
    weight = aWeight;
    if (aWeight>=3||aAge<=18)
    {
      throw new RuntimeException("Please provide a valid age and weight [weight<3&&age>18]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setAge(int aAge)
  {
    boolean wasSet = false;
    if (getWeight()<3&&aAge>18)
    {
    age = aAge;
    wasSet = true;
    }
    return wasSet;
  }

  public boolean setWeight(int aWeight)
  {
    boolean wasSet = false;
    if (aWeight<3&&getAge()>18)
    {
    weight = aWeight;
    wasSet = true;
    }
    return wasSet;
  }

  public int getAge()
  {
    return age;
  }

  public int getWeight()
  {
    return weight;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "age" + ":" + getAge()+ "," +
            "weight" + ":" + getWeight()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "BasicConstraint6.ump"
public class student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //student Attributes
  private int age;
  private int weight;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public student(int aAge, int aWeight)
  {
    age = aAge;
    weight = aWeight;
    if (aWeight>=3&&aAge<=18)
    {
      throw new RuntimeException("Please provide a valid age and weight [weight<3||age>18]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setAge(int aAge)
  {
    boolean wasSet = false;
    if (getWeight()<3||aAge>18)
    {
    age = aAge;
    wasSet = true;
    }
    return wasSet;
  }

  public boolean setWeight(int aWeight)
  {
    boolean wasSet = false;
    if (aWeight<3||getAge()>18)
    {
    weight = aWeight;
    wasSet = true;
    }
    return wasSet;
  }

  public int getAge()
  {
    return age;
  }

  public int getWeight()
  {
    return weight;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "age" + ":" + getAge()+ "," +
            "weight" + ":" + getWeight()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "BasicConstraint7.ump"
public class student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //student Attributes
  private int age;
  private int weight;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public student(int aAge, int aWeight)
  {
    age = aAge;
    weight = aWeight;
    if ((aAge>18))
    {
      throw new RuntimeException("Please provide a valid age [age<=18]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setAge(int aAge)
  {
    boolean wasSet = false;
    if ((aAge<=18))
    {
    age = aAge;
    wasSet = true;
    }
    return wasSet;
  }

  public boolean setWeight(int aWeight)
  {
    boolean wasSet = false;
    weight = aWeight;
    wasSet = true;
    return wasSet;
  }

  public int getAge()
  {
    return age;
  }

  public int getWeight()
  {
    return weight;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "age" + ":" + getAge()+ "," +
            "weight" + ":" + getWeight()+ "]";
  }
}
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!*/



// line 1 "BasicConstraint8.ump"
public class student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //student Attributes
  private int age;
  private int weight;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public student(int aAge, int aWeight)
  {
    age = aAge;
    weight = aWeight;
    if (aAge>=10||(aAge>=10))
    {
      throw new RuntimeException("Please provide a valid age [age<10&&age<10]");
    }
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setAge(int aAge)
  {
    boolean wasSet = false;
    if (aAge<10&&(aAge<10))
    {
    age = aAge;
    wasSet = true;
    }
    return wasSet;
  }

  public boolean setWeight(int aWeight)
  {
    boolean wasSet = false;
    weight = aWeight;
    wasSet = true;
    return wasSet;
  }

  public int getAge()
  {
    return age;
  }

  public int getWeight()
  {
    return weight;
  }

  public void delete()
  {}


  public String toString()
  {
    return super.toString() + "["+
            "age" + ":" + getAge()+ "," +
            "weight" + ":" + getWeight()+ "]";
  }
}
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
