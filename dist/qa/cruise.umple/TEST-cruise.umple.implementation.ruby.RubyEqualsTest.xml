<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="Abdulazizs-MacBook-Pro.local" name="cruise.umple.implementation.ruby.RubyEqualsTest" skipped="0" tests="6" time="0.054" timestamp="2021-10-26T14:28:13">
  <properties>
    <property name="ant.library.dir" value="/usr/local/Cellar/ant/1.10.9/libexec/lib" />
    <property name="env.TERM" value="xterm-256color" />
    <property name="java.specification.version" value="15" />
    <property name="ant.project.name" value="UmpleCore" />
    <property name="ant.file.type.UmpleCore" value="file" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="ant.file.type.LocalBuildProperties" value="file" />
    <property name="env.SDKMAN_CANDIDATES_API" value="https://api.sdkman.io/2" />
    <property name="sun.arch.data.model" value="64" />
    <property name="dist.umple.docs.jar.prev" value="umpledocs-1.31.1.5860.78bb27cc6.jar" />
    <property name="rake_cmd" value="rake" />
    <property name="showJunitOutput" value="false" />
    <property name="umple.deps.dir" value="/Users/abdulaziz/tmp/umple/dist/libs" />
    <property name="java.vendor.url" value="https://openjdk.java.net/" />
    <property name="dist.libs.dir" value="/Users/abdulaziz/tmp/umple/dist/libs" />
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home/lib" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner testsfile=/Users/abdulaziz/tmp/umple/junittestcases9945622084601822128.properties skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false showoutput=false outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/Users/abdulaziz/tmp/umple/dist/qa/cruise.umple/IGNORETHIS.xml crashfile=/Users/abdulaziz/tmp/umple/junitvmwatcher11280979461299836288.properties propsfile=/Users/abdulaziz/tmp/umple/junit10838995335343066243.properties" />
    <property name="jdk.debug" value="release" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="test.output.path" value="/Users/abdulaziz/tmp/umple/dist/qa/cruise.umple" />
    <property name="env.JAVA_HOME" value="/usr/local/opt/openjdk" />
    <property name="java.version.date" value="2020-10-20" />
    <property name="java.home" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home" />
    <property name="basedir" value="/Users/abdulaziz/tmp/umple" />
    <property name="file.separator" value="/" />
    <property name="java.vm.compressedOopsMode" value="Zero based" />
    <property name="line.separator" value="&#xa;" />
    <property name="ivy.jar.file" value="/Users/abdulaziz/.ant/lib/ivy-2.4.0.jar" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.file.Template" value="/Users/abdulaziz/tmp/umple/build/_template.xml" />
    <property name="dist.umple.stats.jar" value="umplestats-1.31.1.5860.78bb27cc6.jar" />
    <property name="ivyRetrieveLogLevel" value="quiet" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="java.runtime.version" value="15.0.1+9" />
    <property name="env.TERM_PROGRAM_VERSION" value="440" />
    <property name="user.name" value="abdulaziz" />
    <property name="env.PATH" value="/Users/abdulaziz/.sdkman/candidates/gradle/current/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands" />
    <property name="env.LOGNAME" value="abdulaziz" />
    <property name="env.XPC_FLAGS" value="0x0" />
    <property name="env.__CF_USER_TEXT_ENCODING" value="0x1F5:0x0:0x0" />
    <property name="file.encoding" value="UTF-8" />
    <property name="env.__CFBundleIdentifier" value="com.apple.Terminal" />
    <property name="env.TERM_SESSION_ID" value="20D2790F-0FEC-4CCB-A10B-030C8F4ED298" />
    <property name="umple.stable.jar" value="/Users/abdulaziz/tmp/umple/dist/libs/umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="haltonfailure" value="false" />
    <property name="connectionTimeout" value="30" />
    <property name="env.SHLVL" value="1" />
    <property name="dist.dir" value="/Users/abdulaziz/tmp/umple/dist" />
    <property name="dist.path" value="/Users/abdulaziz/tmp/umple/dist/cruise.umple" />
    <property name="java.io.tmpdir" value="/var/folders/fm/7tjk7l8154x840c6vvrs49p40000gn/T/" />
    <property name="umple.ivy.dep.file" value="/Users/abdulaziz/tmp/umple/build/ivy.xml" />
    <property name="dist.umple.run.jar.prev" value="umplerun-1.31.1.5860.78bb27cc6.jar" />
    <property name="dist.umple.jar" value="umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.version" value="15.0.1" />
    <property name="env.SSH_AUTH_SOCK" value="/private/tmp/com.apple.launchd.qK4l0KXsgu/Listeners" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.home" value="/usr/local/Cellar/ant/1.10.9/libexec" />
    <property name="ant.file.type.UmpleDeps" value="file" />
    <property name="env.SDKMAN_DIR" value="/Users/abdulaziz/.sdkman" />
    <property name="ant.version" value="Apache Ant(TM) version 1.10.9 compiled on September 27 2020" />
    <property name="env.TMPDIR" value="/var/folders/fm/7tjk7l8154x840c6vvrs49p40000gn/T/" />
    <property name="env.SDKMAN_PLATFORM" value="darwinx64" />
    <property name="java.library.path" value="/Users/abdulaziz/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:." />
    <property name="java.vendor" value="N/A" />
    <property name="shouldPackageUmpleOnline" value="false" />
    <property name="dist.umple.validator.jar" value="umplevalidator-1.31.1.5860.78bb27cc6.jar" />
    <property name="sun.io.unicode.encoding" value="UnicodeBig" />
    <property name="jopt-simple.install.version" value="4.4" />
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="env.SDKMAN_CANDIDATES_DIR" value="/Users/abdulaziz/.sdkman/candidates" />
    <property name="env.TERM_PROGRAM" value="Apple_Terminal" />
    <property name="vendors.path" value="/Users/abdulaziz/tmp/umple/dist/libs/vendors" />
    <property name="env.PWD" value="/Users/abdulaziz/tmp/umple/build" />
    <property name="ant.file.type" value="file" />
    <property name="last.version" value="1.31.1.5860.78bb27cc6" />
    <property name="env.LANG" value="en_CA.UTF-8" />
    <property name="ant.file.type.VersionLast" value="file" />
    <property name="java.class.path" value="/Users/abdulaziz/tmp/umple/cruise.umple/bin:/Users/abdulaziz/tmp/umple/dist/libs/core/ant-launcher.jar:/Users/abdulaziz/tmp/umple/dist/libs/core/ant.jar:/Users/abdulaziz/tmp/umple/dist/libs/core/jopt-simple.jar:/Users/abdulaziz/tmp/umple/dist/libs/test/hamcrest-core.jar:/Users/abdulaziz/tmp/umple/dist/libs/test/junit.jar:/Users/abdulaziz/.ant/lib/junit.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-launcher.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-junit.jar:/usr/local/Cellar/ant/1.10.9/libexec/lib/ant-junit4.jar" />
    <property name="env.HOME" value="/Users/abdulaziz" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="env.GRADLE_HOME" value="/Users/abdulaziz/.sdkman/candidates/gradle/current" />
    <property name="xtext.project.path" value="cruise.umple.xtext" />
    <property name="ant.file.type.Template" value="file" />
    <property name="user.timezone" value="America/Toronto" />
    <property name="project.path" value="cruise.umple" />
    <property name="ant.file.UmpleDeps" value="/Users/abdulaziz/tmp/umple/build/build.deps.xml" />
    <property name="java.vm.specification.version" value="15" />
    <property name="os.name" value="Mac OS X" />
    <property name="env.DISPLAY" value="/private/tmp/com.apple.launchd.8VZUm1G4zQ/org.xquartz:0" />
    <property name="dist.umple.sync.jar" value="umplesync-1.31.1.5860.78bb27cc6.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="user.country" value="CA" />
    <property name="dist.umple.run.jar" value="umplerun-1.31.1.5860.78bb27cc6.jar" />
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="sun.cpu.endian" value="little" />
    <property name="user.home" value="/Users/abdulaziz" />
    <property name="user.language" value="en" />
    <property name="ivy.install.version" value="2.4.0" />
    <property name="ant.java.version" value="15" />
    <property name="ant.file.type.Umple" value="file" />
    <property name="showJunitSummary" value="false" />
    <property name="bin.path" value="cruise.umple/bin" />
    <property name="umple.version" value="1.31.1.5860.78bb27cc6" />
    <property name="dist.umple.sync.jar.prev" value="umplesync-1.31.1.5860.78bb27cc6.jar" />
    <property name="ivyResolveLogLevel" value="download-only" />
    <property name="env.XPC_SERVICE_NAME" value="0" />
    <property name="user.home.ant" value="/Users/abdulaziz/.ant/lib" />
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="is.osx" value="true" />
    <property name="dist.umple.stats.jar.prev" value="umplestats-1.31.1.5860.78bb27cc6.jar" />
    <property name="ant.file" value="/Users/abdulaziz/tmp/umple/build/build.umple.xml" />
    <property name="path.separator" value=":" />
    <property name="dist.umple.umplificator.jar.prev" value="umpleumplificator-1.31.1.5860.78bb27cc6.jar" />
    <property name="os.version" value="11.6" />
    <property name="ant.file.VersionLast" value="/Users/abdulaziz/tmp/umple/build/_versionLast.xml" />
    <property name="ant.file.Umple" value="/Users/abdulaziz/tmp/umple/build/build.xml" />
    <property name="java.runtime.name" value="OpenJDK Runtime Environment" />
    <property name="dist.umple.docs.jar" value="umpledocs-1.31.1.5860.78bb27cc6.jar" />
    <property name="ant.project.invoked-targets" value="template.test" />
    <property name="dist.umple.umplificator.jar" value="umpleumplificator-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM" />
    <property name="ant.file.LocalBuildProperties" value="/Users/abdulaziz/tmp/umple/build/_local.xml" />
    <property name="env.SHELL" value="/bin/zsh" />
    <property name="ant.core.lib" value="/usr/local/Cellar/ant/1.10.9/libexec/lib/ant.jar" />
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/" />
    <property name="junit" value="*Test" />
    <property name="user.dir" value="/Users/abdulaziz/tmp/umple/build" />
    <property name="os.arch" value="x86_64" />
    <property name="env.SDKMAN_VERSION" value="5.11.5+713" />
    <property name="shouldDeploy" value="false" />
    <property name="dist.umple.validator.jar.prev" value="umplevalidator-1.31.1.5860.78bb27cc6.jar" />
    <property name="java.vm.info" value="mixed mode, sharing" />
    <property name="java.vm.version" value="15.0.1+9" />
    <property name="ant.file.UmpleCore" value="/Users/abdulaziz/tmp/umple/build/build.umple.xml" />
    <property name="online" value="true" />
    <property name="myenv" value="local" />
    <property name="umple.deps.manual.dir" value="/Users/abdulaziz/tmp/umple/dist/libs/manual" />
    <property name="env.USER" value="abdulaziz" />
    <property name="java.class.version" value="59.0" />
    <property name="first.build" value="false" />
    <property name="dist.umple.jar.prev" value="umple-1.31.1.5860.78bb27cc6.jar" />
    <property name="env.JAVA_MAIN_CLASS_3280" value="org.apache.tools.ant.launch.Launcher" />
    <property name="ant.project.default-target" value="build" />
  </properties>
  <testcase classname="cruise.umple.implementation.ruby.RubyEqualsTest" name="indexOf_noKey" time="0.005" />
  <testcase classname="cruise.umple.implementation.ruby.RubyEqualsTest" name="indexOf_Key" time="0.005" />
  <testcase classname="cruise.umple.implementation.ruby.RubyEqualsTest" name="Attributes" time="0.021" />
  <testcase classname="cruise.umple.implementation.ruby.RubyEqualsTest" name="AlreadyImmutable" time="0.007" />
  <testcase classname="cruise.umple.implementation.ruby.RubyEqualsTest" name="Associations" time="0.012" />
  <testcase classname="cruise.umple.implementation.ruby.RubyEqualsTest" name="avoidJunitError" time="0.001" />
  <system-out><![CDATA[# PLEASE DO NOT EDIT THIS CODE
# This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!
# NOTE: Ruby generator is experimental and is missing some features available in
# in other Umple generated languages like Java or PHP

module Example

class Student


  #------------------------
  # MEMBER VARIABLES
  #------------------------

  #Student Associations - for documentation purposes
  #attr_reader :mentors

  #------------------------
  # CONSTRUCTOR
  #------------------------

  def initialize()
    @initialized = false
    @deleted = false
    @mentors = []
    @initialized = true
  end

  #------------------------
  # INTERFACE
  #------------------------

  def get_mentor(index)
    a_mentor = @mentors[index]
    a_mentor
  end

  def get_mentors
    new_mentors = @mentors.dup
    new_mentors
  end

  def number_of_mentors
    number = @mentors.size
    number
  end

  def has_mentors
    has = @mentors.size > 0
    has
  end

  def index_of_mentor(a_mentor)
    index = @mentors.index(a_mentor)
    index = -1 if index.nil?
    index
  end

  def self.minimum_number_of_mentors
    0
  end

  def add_mentor(a_mentor)
    was_added = false
    return false if index_of_mentor(a_mentor) != -1
    @mentors << a_mentor
    if a_mentor.index_of_student(self) != -1
      was_added = true
    else
      was_added = a_mentor.add_student(self)
      unless was_added
        @mentors.delete(a_mentor)
      end
    end
    was_added
  end

  def remove_mentor(a_mentor)
    was_removed = false
    unless @mentors.include?(a_mentor)
      return was_removed
    end

    oldIndex = @mentors.index(a_mentor)
    @mentors.delete_at(oldIndex)
    if a_mentor.index_of_student(self) == -1
      was_removed = true
    else
      was_removed = a_mentor.remove_student(self)
      @mentors.insert(oldIndex,a_mentor) unless was_removed
    end
    was_removed
  end

  def add_mentor_at(a_mentor, index)
    was_added = false
    if add_mentor(a_mentor)
      if(index < 0)
        index = 0
      end
      if(index > number_of_mentors())
        index = number_of_mentors() - 1
      end
      @mentors.delete(a_mentor)
      @mentors.insert(index, a_mentor)
      was_added = true
    end
    was_added
  end

  def add_or_move_mentor_at(a_mentor, index)
    was_added = false
    if @mentors.include?(a_mentor)
      if(index < 0)
        index = 0
      end
      if(index > number_of_mentors())
        index = number_of_mentors() - 1
      end
      @mentors.delete(a_mentor)
      @mentors.insert(index, a_mentor)
      was_added = true
    else
      was_added = add_mentor_at(a_mentor, index)
    end
    was_added
  end

  def delete
    @deleted = true
    copy_of_mentors = @mentors.dup
    @mentors.clear
    copy_of_mentors.each do |a_mentor|
      a_mentor.remove_student(self)
    end
  end

end
end
# PLEASE DO NOT EDIT THIS CODE
# This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!
# NOTE: Ruby generator is experimental and is missing some features available in
# in other Umple generated languages like Java or PHP

module Example

class Student


  #------------------------
  # MEMBER VARIABLES
  #------------------------

  #Student Associations - for documentation purposes
  #attr_reader :mentors

  #------------------------
  # CONSTRUCTOR
  #------------------------

  def initialize()
    @initialized = false
    @deleted = false
    @mentors = []
    @initialized = true
  end

  #------------------------
  # INTERFACE
  #------------------------

  def get_mentor(index)
    a_mentor = @mentors[index]
    a_mentor
  end

  def get_mentors
    new_mentors = @mentors.dup
    new_mentors
  end

  def number_of_mentors
    number = @mentors.size
    number
  end

  def has_mentors
    has = @mentors.size > 0
    has
  end

  def index_of_mentor(a_mentor)
    index = @mentors.index(a_mentor)
    index = -1 if index.nil?
    index
  end

  def self.minimum_number_of_mentors
    0
  end

  def add_mentor(a_mentor)
    was_added = false
    return false if index_of_mentor(a_mentor) != -1
    @mentors << a_mentor
    if a_mentor.index_of_student(self) != -1
      was_added = true
    else
      was_added = a_mentor.add_student(self)
      unless was_added
        @mentors.delete(a_mentor)
      end
    end
    was_added
  end

  def remove_mentor(a_mentor)
    was_removed = false
    unless @mentors.include?(a_mentor)
      return was_removed
    end

    oldIndex = @mentors.index(a_mentor)
    @mentors.delete_at(oldIndex)
    if a_mentor.index_of_student(self) == -1
      was_removed = true
    else
      was_removed = a_mentor.remove_student(self)
      @mentors.insert(oldIndex,a_mentor) unless was_removed
    end
    was_removed
  end

  def add_mentor_at(a_mentor, index)
    was_added = false
    if add_mentor(a_mentor)
      if(index < 0)
        index = 0
      end
      if(index > number_of_mentors())
        index = number_of_mentors() - 1
      end
      @mentors.delete(a_mentor)
      @mentors.insert(index, a_mentor)
      was_added = true
    end
    was_added
  end

  def add_or_move_mentor_at(a_mentor, index)
    was_added = false
    if @mentors.include?(a_mentor)
      if(index < 0)
        index = 0
      end
      if(index > number_of_mentors())
        index = number_of_mentors() - 1
      end
      @mentors.delete(a_mentor)
      @mentors.insert(index, a_mentor)
      was_added = true
    else
      was_added = add_mentor_at(a_mentor, index)
    end
    was_added
  end

  def delete
    @deleted = true
    copy_of_mentors = @mentors.dup
    @mentors.clear
    copy_of_mentors.each do |a_mentor|
      a_mentor.remove_student(self)
    end
  end

end
end
# PLEASE DO NOT EDIT THIS CODE
# This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!
# NOTE: Ruby generator is experimental and is missing some features available in
# in other Umple generated languages like Java or PHP

module Example

class Student


  #------------------------
  # MEMBER VARIABLES
  #------------------------

  #Student Attributes - for documentation purposes
  #attr_reader :intId, :doubleId, :booleanId, :stringId, :stringListIds

  #------------------------
  # CONSTRUCTOR
  #------------------------

  def initialize(a_intId, a_doubleId, a_booleanId, a_stringId)
    @initialized = false
    @deleted = false
    @cachedHashCode = -1
    @can_set_intId = true
    @can_set_doubleId = true
    @can_set_booleanId = true
    @can_set_stringId = true
    @can_set_stringListIds = true
    @intId = a_intId
    @doubleId = a_doubleId
    @booleanId = a_booleanId
    @stringId = a_stringId
    @stringListIds = []
    @initialized = true
  end

  #------------------------
  # INTERFACE
  #------------------------

  def set_intId(a_intId)
    was_set = false
    return false unless @can_set_intId
    @intId = a_intId
    was_set = true
    was_set
  end

  def set_doubleId(a_doubleId)
    was_set = false
    return false unless @can_set_doubleId
    @doubleId = a_doubleId
    was_set = true
    was_set
  end

  def set_booleanId(a_booleanId)
    was_set = false
    return false unless @can_set_booleanId
    @booleanId = a_booleanId
    was_set = true
    was_set
  end

  def set_stringId(a_stringId)
    was_set = false
    return false unless @can_set_stringId
    @stringId = a_stringId
    was_set = true
    was_set
  end

  def add_stringListId(a_stringListId)
    was_added = false
    return false unless @can_set_stringListIds
    was_added = stringListIds << a_stringListId
    was_added
  end

  def remove_stringListId(a_stringListId)
    was_removed = false
    return false unless @can_set_stringListIds
    was_removed = stringListIds.delete(a_stringListId)
    was_removed
  end

  def get_intId
    @intId
  end

  def get_doubleId
    @doubleId
  end

  def get_booleanId
    @booleanId
  end

  def get_stringId
    @stringId
  end

  def get_stringListId(index)
    a_stringListId = stringListIds[index]
    a_stringListId
  end

  def get_stringListIds
    String[] new_stringListIds = stringListIds.toArray(new String[stringListIds.size])
    new_stringListIds
  end

  def number_of_stringListIds
    number = stringListIds.size
    number;
  end

  def has_stringListIds
    has = stringListIds.size > 0
    has
  end

  def index_of_stringListId(a_stringListId)
    index = stringListIds.index(a_stringListId)
    index = -1 if index.nil?
    index
  end

  def is_booleanId?
    @booleanId
  end

  def eql?(obj)
    return false if obj.nil?
    return false unless self.class == obj.class

    compareTo = obj
    return false unless @intId == compareTo.instance_variable_get("@intId")

    return false unless @doubleId == compareTo.instance_variable_get("@doubleId")

    return false unless @booleanId == compareTo.instance_variable_get("@booleanId")

    return false if (@stringId.nil? and !compareTo.instance_variable_get("@stringId").nil?)
    return false if (!@stringId.nil? and !@stringId.eql?(compareTo.instance_variable_get("@stringId")))

    return false unless @stringListIds.size == compareTo.instance_variable_get("@stringListIds").size
    @stringListIds.each do |me|
      them = compareTo.instance_variable_get("@stringListIds").get(i)
      return false if (me.nil? and !them.nil?)
      return false if (!me.nil? and !me.eql?(them))
    end
    true
  end

  def hash
    return @cachedHashCode unless @cachedHashCode == -1
    @cachedHashCode = 17
    @cachedHashCode = @cachedHashCode * 23 + @intId

    @cachedHashCode = @cachedHashCode * 23 + @doubleId.hash

    @cachedHashCode = @cachedHashCode * 23 + (@booleanId ? 1 : 0)

    if (!@stringId.nil?)
      @cachedHashCode = @cachedHashCode * 23 + @stringId.hash
    else
      @cachedHashCode = @cachedHashCode * 23
    end

    if (!@stringListIds.nil?)
      @cachedHashCode = @cachedHashCode * 23 + @stringListIds.hash
    else
      @cachedHashCode = @cachedHashCode * 23
    end
    @can_set_intId = false
    @can_set_doubleId = false
    @can_set_booleanId = false
    @can_set_stringId = false
    @can_set_stringListIds = false
    @cachedHashCode
  end

  def delete
    @deleted = true
  end

end
end
# PLEASE DO NOT EDIT THIS CODE
# This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!
# NOTE: Ruby generator is experimental and is missing some features available in
# in other Umple generated languages like Java or PHP

module Example

class Student


  #------------------------
  # MEMBER VARIABLES
  #------------------------

  #Student Attributes - for documentation purposes
  #attr_reader :intId, :doubleId, :booleanId, :stringId

  #------------------------
  # CONSTRUCTOR
  #------------------------

  def initialize(a_doubleId, a_booleanId, a_stringId)
    @initialized = false
    @deleted = false
    @cachedHashCode = -1
    @intId = 0
    @can_set_intId = true
    @doubleId = a_doubleId
    @can_set_doubleId = false
    @booleanId = a_booleanId
    @can_set_booleanId = false
    @stringId = a_stringId
    @can_set_stringId = false
    @initialized = true
  end

  #------------------------
  # INTERFACE
  #------------------------

  def set_intId(a_intId)
    was_set = false
    return false unless @can_set_intId
    @can_set_intId = false
    @intId = a_intId
    was_set = true
    was_set
  end

  def get_intId
    @intId
  end

  def get_doubleId
    @doubleId
  end

  def get_booleanId
    @booleanId
  end

  def get_stringId
    @stringId
  end

  def is_booleanId?
    @booleanId
  end

  def eql?(obj)
    return false if obj.nil?
    return false unless self.class == obj.class

    compareTo = obj
    return false unless @intId == compareTo.instance_variable_get("@intId")

    return false unless @doubleId == compareTo.instance_variable_get("@doubleId")

    return false unless @booleanId == compareTo.instance_variable_get("@booleanId")

    return false if (@stringId.nil? and !compareTo.instance_variable_get("@stringId").nil?)
    return false if (!@stringId.nil? and !@stringId.eql?(compareTo.instance_variable_get("@stringId")))
    true
  end

  def hash
    return @cachedHashCode unless @cachedHashCode == -1
    @cachedHashCode = 17
    @cachedHashCode = @cachedHashCode * 23 + @intId

    @cachedHashCode = @cachedHashCode * 23 + @doubleId.hash

    @cachedHashCode = @cachedHashCode * 23 + (@booleanId ? 1 : 0)

    if (!@stringId.nil?)
      @cachedHashCode = @cachedHashCode * 23 + @stringId.hash
    else
      @cachedHashCode = @cachedHashCode * 23
    end
    @can_set_intId = false
    @can_set_doubleId = false
    @can_set_booleanId = false
    @can_set_stringId = false
    @cachedHashCode
  end

  def delete
    @deleted = true
  end

end
end
# PLEASE DO NOT EDIT THIS CODE
# This code was generated using the UMPLE 1.31.1.5860.78bb27cc6 modeling language!
# NOTE: Ruby generator is experimental and is missing some features available in
# in other Umple generated languages like Java or PHP

module Example

class Mentor


  #------------------------
  # MEMBER VARIABLES
  #------------------------

  #Mentor Associations - for documentation purposes
  #attr_reader :main, :secondaries

  #------------------------
  # CONSTRUCTOR
  #------------------------

  def initialize()
    @initialized = false
    @deleted = false
    @cachedHashCode = -1
    @can_set_main = true
    @can_set_secondaries = true
    @main = nil
    @secondaries = []
    @initialized = true
  end

  #------------------------
  # INTERFACE
  #------------------------

  def get_main
    @main
  end

  def has_main
    has = !@main.nil?
    has
  end

  def get_secondary(index)
    a_secondary = @secondaries[index]
    a_secondary
  end

  def get_secondaries
    new_secondaries = @secondaries.dup
    new_secondaries
  end

  def number_of_secondaries
    number = @secondaries.size
    number
  end

  def has_secondaries
    has = @secondaries.size > 0
    has
  end

  def index_of_secondary(a_secondary)
    index = @secondaries.index(a_secondary)
    index = -1 if index.nil?
    index
  end

  def set_main(a_new_main)
    was_set = false
    return false unless @can_set_main
    if a_new_main.nil?
      existing_main = @main
      @main = nil
      
      if !existing_main.nil? and !existing_main.get_mentorMain.nil?
        existing_main.set_mentorMain(nil)
      end
      was_set = true
      return was_set
    end

    current_main = self.get_main
    if !current_main.nil? and !current_main.eql?(a_new_main)
      current_main.set_mentorMain(nil)
    end

    @main = a_new_main
    existing_mentorMain = a_new_main.get_mentorMain

    unless self.eql?(existing_mentorMain)
      a_new_main.set_mentorMain(self)
    end
    was_set = true
    was_set
  end

  def self.minimum_number_of_secondaries
    0
  end

  def add_secondary(a_secondary)
    was_added = false
    return false unless @can_set_secondaries
    return false if index_of_secondary(a_secondary) != -1
    existing_mentorSecondary = a_secondary.get_mentorSecondary
    if existing_mentorSecondary.nil?
      a_secondary.set_mentorSecondary(self)
    elsif !existing_mentorSecondary.eql?(self)
      existing_mentorSecondary.remove_secondary(a_secondary)
      add_secondary(a_secondary)
    else
      @secondaries << a_secondary
    end
    was_added = true
    was_added
  end

  def remove_secondary(a_secondary)
    was_removed = false
    return false unless @can_set_secondaries
    if @secondaries.include?(a_secondary)
      @secondaries.delete(a_secondary)
      a_secondary.set_mentorSecondary(nil)
      was_removed = true
    end
    was_removed
  end

  def add_secondary_at(a_secondary, index)
    was_added = false
    if add_secondary(a_secondary)
      if(index < 0)
        index = 0
      end
      if(index > number_of_secondaries())
        index = number_of_secondaries() - 1
      end
      @secondaries.delete(a_secondary)
      @secondaries.insert(index, a_secondary)
      was_added = true
    end
    was_added
  end

  def add_or_move_secondary_at(a_secondary, index)
    was_added = false
    if @secondaries.include?(a_secondary)
      if(index < 0)
        index = 0
      end
      if(index > number_of_secondaries())
        index = number_of_secondaries() - 1
      end
      @secondaries.delete(a_secondary)
      @secondaries.insert(index, a_secondary)
      was_added = true
    else
      was_added = add_secondary_at(a_secondary, index)
    end
    was_added
  end

  def eql?(obj)
    return false if obj.nil?
    return false unless self.class == obj.class

    compareTo = obj
    return false if (@main.nil? and !compareTo.instance_variable_get("@main").nil?)
    return false if (!@main.nil? and !@main.eql?(compareTo.instance_variable_get("@main")))

    return false unless @secondaries.size == compareTo.instance_variable_get("@secondaries").size
    @secondaries.each do |me|
      them = compareTo.instance_variable_get("@secondaries").get(i)
      return false if (me.nil? and !them.nil?)
      return false if (!me.nil? and !me.eql?(them))
    end
    true
  end

  def hash
    return @cachedHashCode unless @cachedHashCode == -1
    @cachedHashCode = 17
    if (!@main.nil?)
      @cachedHashCode = @cachedHashCode * 23 + @main.hash
    else
      @cachedHashCode = @cachedHashCode * 23
    end
    if (!@secondaries.nil?)
      @cachedHashCode = @cachedHashCode * 23 + @secondaries.hash
    else
      @cachedHashCode = @cachedHashCode * 23
    end
    @can_set_main = false
    @can_set_secondaries = false
    @cachedHashCode
  end

  def delete
    @deleted = true
    unless @main.nil?
      @main.set_mentorMain(nil)
    end
    @secondaries.each do |a_secondary|
      a_secondary.set_mentorSecondary(nil)
    end
  end

end
end
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
